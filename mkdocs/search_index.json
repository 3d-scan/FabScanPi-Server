{
    "docs": [
        {
            "location": "/", 
            "text": ".github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}\n\n\n\n\nAbout the Project\n\n\nFabScan is an open source 3D laser scanner. The \nproject\n started in 2010 at \n\nGermany's first FabLab in Aachen\n. The FabScan PI is the next generation of the FabScan 3D Laser Scanner.\n\n\nA Raspberry Pi 2 and a Raspberry Pi camera module are used to turn the FabScan PI into a stand-alone and web-enabled 3D Laser Scanner.\n\n\nQuick Start\n\n\nThe fastest way to use the FabScanPi is to use the FabScanPi Raspbian ISO image. \nConnect all needed hardware parts, download and flash the latest ISO image:\n\n\n\n    \nLatest Release\n\n    \n\n    \n\n    A list of all released images can be found \nhere\n.\n\n    \nSince release v2016-05-15-14-05 the image files are zipped.\n\n\n\n\n\n\n\nYou have to unzip the file to get the .img file. After flashing the image to an SD card point your browser to \nhttp://[ ip-address-of-your-raspberry-pi ]\n\n\nPurchase a Kit\n\n\nYou can purchase the FabScanPi as a kit or in parts at \nWatterott Electronics\n\n\n\n\nFabScanPi Kit\n ( contains all needed parts )\n\n\nFabScanPi HAT\n ( a Raspberry Pi HAT for FabScan )\n\n\nFabScanPi Camera Mount\n ( Raspberry Pi cam mount with LED's)\n\n\nFaBScanPi Case\n ( laser cut wooden case parts )", 
            "title": "Home"
        }, 
        {
            "location": "/#about-the-project", 
            "text": "FabScan is an open source 3D laser scanner. The  project  started in 2010 at  Germany's first FabLab in Aachen . The FabScan PI is the next generation of the FabScan 3D Laser Scanner.  A Raspberry Pi 2 and a Raspberry Pi camera module are used to turn the FabScan PI into a stand-alone and web-enabled 3D Laser Scanner.", 
            "title": "About the Project"
        }, 
        {
            "location": "/#quick-start", 
            "text": "The fastest way to use the FabScanPi is to use the FabScanPi Raspbian ISO image. \nConnect all needed hardware parts, download and flash the latest ISO image:", 
            "title": "Quick Start"
        }, 
        {
            "location": "/#purchase-a-kit", 
            "text": "You can purchase the FabScanPi as a kit or in parts at  Watterott Electronics   FabScanPi Kit  ( contains all needed parts )  FabScanPi HAT  ( a Raspberry Pi HAT for FabScan )  FabScanPi Camera Mount  ( Raspberry Pi cam mount with LED's)  FaBScanPi Case  ( laser cut wooden case parts )", 
            "title": "Purchase a Kit"
        }, 
        {
            "location": "/hardware/", 
            "text": "Parts\n\n\nCase\n\n\nThe laser cut files can be found at \nhttps://github.com/mariolukas/FabScan-Case\n\n\nElectronics\n\n\n\n\nThe FabScan PI case is the same as the FabScan (CUBE) case. The Logitech webcam is replaced by the a Raspberry PI\ncamera module. The Logitech webcam will also work, but it is very slow in combination with the Raspberry PI. \nThe Raspberry PI camera module also provides a higher resolution what will increase the scan results. It is highly \nrecommended to use a Raspberry PI 2 because of its four CPU core (FabScan PI provides multicore support). \nConnect the Arduino with the FabScan Shield mounted on it to one of the Raspberry Pi's USB ports and mount the camera \nin front of the turntable. \n\n\nIf you are not using the FabScan Shield, you can find the pinout of the Arduino in the firmware repository.\n\n\nhttps://github.com/mariolukas/FabScanPi-Firmware/blob/master/configuration.h\n\n\nFor a smoother turntable movement it is better to use a silent step stick motor driver. With a silent step stick \nmotor driver there is no need to glue the object to the turntable. It will not slip/slide anymore.\n\n\nIt is possible to get better scan results by mounting a RGB LED Ring or LED strip (WS2812 or compatible) beside the \ncamera module. The LED ring/strip is connected to the 3 pinned header between the sockel for the fourth motor driver.\nThe \"S\" pin goes to DI of the LED ring/strip.\n\n\nFinally connect the 5V power supply to the Raspberry PI 2 and the 12V power supply to the Arduino. Turn both on.\n\n\nDevelopers can find the firmware source at: \nhttps://github.com/mariolukas/FabScanPi-Firmware\n\n\nPart List\n\n\nAll needed parts can be purchased at: \nhttp://www.watterott.com\n\n\n\n\nRaspberry Pi 2: \nhttp://www.watterott.com/en/Raspberry-Pi-Modell-2\n\n\nRaspberry Pi camera module: \nhttp://www.watterott.com/en/Raspberry-Pi-Kamera-Board\n\n\nRaspberry camera module cable extension\n\n\nArduino/Genuino UNO: \nhttp://www.watterott.com/en/Genuino-Uno-Rev3\n\n\nFabScan Arduino Shield: \nhttp://www.watterott.com/en/Arduino-FabScan-Shield\n\n\nSilent Step Stick motor driver: \nhttp://www.watterott.com/en/SilentStepStick\n\n\nFabScan Case: \nhttp://www.watterott.com/en/Fabscan-CUBE-Kit\n\n\nRed line laser module: \nhttp://www.watterott.com/en/5mW-Linienlaser-rot\n\n\n5V Power Supply ( Raspberry PI ): \nhttp://www.watterott.com/en/HNP15-USB\n\n\n12V Power Supply ( Arduino and Shield ): \nhttp://www.watterott.com/en/Netzteil-12V-2A\n\n\n\n\nThere will be a release of the official FabScan PI - HAT soon. This HAT replaces the Arduino and the FabScan Arduino \nShield. Another benefit of using the FabScan HAT is that the whole setup needs only one 12V power supply.", 
            "title": "Hardware"
        }, 
        {
            "location": "/hardware/#parts", 
            "text": "", 
            "title": "Parts"
        }, 
        {
            "location": "/hardware/#case", 
            "text": "The laser cut files can be found at  https://github.com/mariolukas/FabScan-Case", 
            "title": "Case"
        }, 
        {
            "location": "/hardware/#electronics", 
            "text": "The FabScan PI case is the same as the FabScan (CUBE) case. The Logitech webcam is replaced by the a Raspberry PI\ncamera module. The Logitech webcam will also work, but it is very slow in combination with the Raspberry PI. \nThe Raspberry PI camera module also provides a higher resolution what will increase the scan results. It is highly \nrecommended to use a Raspberry PI 2 because of its four CPU core (FabScan PI provides multicore support). \nConnect the Arduino with the FabScan Shield mounted on it to one of the Raspberry Pi's USB ports and mount the camera \nin front of the turntable.   If you are not using the FabScan Shield, you can find the pinout of the Arduino in the firmware repository.  https://github.com/mariolukas/FabScanPi-Firmware/blob/master/configuration.h  For a smoother turntable movement it is better to use a silent step stick motor driver. With a silent step stick \nmotor driver there is no need to glue the object to the turntable. It will not slip/slide anymore.  It is possible to get better scan results by mounting a RGB LED Ring or LED strip (WS2812 or compatible) beside the \ncamera module. The LED ring/strip is connected to the 3 pinned header between the sockel for the fourth motor driver.\nThe \"S\" pin goes to DI of the LED ring/strip.  Finally connect the 5V power supply to the Raspberry PI 2 and the 12V power supply to the Arduino. Turn both on.  Developers can find the firmware source at:  https://github.com/mariolukas/FabScanPi-Firmware", 
            "title": "Electronics"
        }, 
        {
            "location": "/hardware/#part-list", 
            "text": "All needed parts can be purchased at:  http://www.watterott.com   Raspberry Pi 2:  http://www.watterott.com/en/Raspberry-Pi-Modell-2  Raspberry Pi camera module:  http://www.watterott.com/en/Raspberry-Pi-Kamera-Board  Raspberry camera module cable extension  Arduino/Genuino UNO:  http://www.watterott.com/en/Genuino-Uno-Rev3  FabScan Arduino Shield:  http://www.watterott.com/en/Arduino-FabScan-Shield  Silent Step Stick motor driver:  http://www.watterott.com/en/SilentStepStick  FabScan Case:  http://www.watterott.com/en/Fabscan-CUBE-Kit  Red line laser module:  http://www.watterott.com/en/5mW-Linienlaser-rot  5V Power Supply ( Raspberry PI ):  http://www.watterott.com/en/HNP15-USB  12V Power Supply ( Arduino and Shield ):  http://www.watterott.com/en/Netzteil-12V-2A   There will be a release of the official FabScan PI - HAT soon. This HAT replaces the Arduino and the FabScan Arduino \nShield. Another benefit of using the FabScan HAT is that the whole setup needs only one 12V power supply.", 
            "title": "Part List"
        }, 
        {
            "location": "/software/", 
            "text": "Installation\n\n\nThere ist no need to flash the Arduino firmware. It will be flashed automatically with the current\nfirmware version after the server is started.\n\n\nInstallation with FabScanPi Image (recommended)\n\n\nThe fastest way to start working with FabScan PI is to use the FabScan PI Raspbian Image. \nDowload the image and install it to a SD-Card. After the image is flashed and the Raspberry\nPi is up and runnig follow the instructions in the \nUsage section\n\n\nLatest image release: \n\n\nhttps://github.com/mariolukas/FabScanPi-Build-Raspbian/releases/latest\n\n\nThe image can be build with the FabScanPi Image build script. You will find more \ninformation \nhere\n\n\nInstalling with fresh Raspbian and packages\n\n\nThis description assumes that you have a SD card with a fresh Raspbian image on it. \n\n\nFirst add the fabscan repository to your source list. \n\n\necho \ndeb http://archive.fabscan.org/ jessie main\n \n /etc/apt/sources.list\n\n\n\n\nThen add the FabScan PI repository key to your key chain.\n\n\nwget http://archive.fabscan.org/fabscan.public.key -O - | sudo apt-key add -\n\n\n\n\nUpdate the package list.\n\n\napt-get update\n\n\n\n\nFinish the installation with the needed packages.\n\n\napt-get install fabscanpi-server python-opencv-tbb libtbb2  python-pil python-serial python-pykka python-picamera avrdude\n\n\n\n\nThe FabScan PI server can be started with \n\n\nsudo /etc/init.d/fabscanpi-server start\n\n\n\n\nRead \nUsage\n section for the next steps.\n\n\nInstallation: With Source Code\n\n\nDependencies\n\n\nFabScan PI software depends on some python libraries. You need to install pyserial, pykka, opencv with tbb support \nand picamera. The easiest way to install all dependencies is to use debians package manager apt. Some of the packages, \nlike opencv with tbb support and libtbb are not provided by the official raspbian mirrors. You need to add the\nfabscan repository to your apt source list. \n\n\nBuild Debian package\nInstall dependencies\n\n\nsudo apt-get install build-essential dpkg-dev debhelper devscripts fakeroot cdbs python-setuptools python-support\n\n\n\n\nThe package is build by calling\n\n\nmake deb\n\n\n\n\nAfterwards the package can be installed by \n\n\ndpkg -i fabscabpi-server\npackage-version\n.deb\n\n\n\n\nUpdates\n\n\nUpdates can be installed with debian's apt-get package manager. Log in via ssh and check/install \nupdates with the following command.\n\n\nsudo apt-get update \n apt-get upgrade\n\n\n\n\nConfiguration\n\n\nA configuration file can be found in /etc/fabscanpi/default.config.json. The content of this file \nis in JSON format and can be edited with an editor of your choice (e.g. nano). Be careful and don't\nmiss brackets. JSON is really sensitive in it's format.\n\n\nFolders\n\n\nIn this section you can change the scan output folder and the folder where the ui is located. If \nyou don't know what you are doing, it is a good decision to keep this section untouched.\n\n\n   \nfolders\n : {\n    \nwww\n: \n/home/pi/fabscan/src/www/\n,\n    \nscans\n: \n/usr/local/fabscanpi/scans/\n\n   }\n\n\n\n\nSerial\n\n\nIn this section you can set your port. By default this value is not set, because the\nFabScanPi Server software autodetcts the correct port. Some Arduino and compatible boards differ \nin the port name. The port can be set if you are not using an Arduino UNO or compatible Board. \nIn case that your Arduino is not detected and you can see an error in the /var/log/fabscanpi/fabscan.log\nyou should add the \"port\" attribute to your config.\n\n\nThe autoflash option is True by default, that means that the firmware is flashed automatically to \nthe Arduino or FabScanPi HAT. If you want to use a custom board e.g. sanguinololu, you can set this\nto False and flash the Firmware manually to your board. \n\n\n   \nserial\n : {\n     \nbaudrate\n : 115200,\n     \nport\n: \n/dev/ttyACM0\n,\n     \nautoflash\n: \nTrue\n\n   }\n\n\n\n\nCamera\n\n\nIn this section some camera values are set. The type can be set to PICAM which is default value. There is \nalso an experimental mode for a C270 webcam. But this mode is not further developed. I used it in early \nversions of fabscanpi. \n\n\nThe device is not used for the PICAM. Only if a webcam is used, you have to set the device to the count number\nof your webcam if you have one or more cameras connected to your pi.\n\n\nPreview Resolution is the resolution value for the settings window. \nResolution is the resolution for the picamera python module. You can have a look to the documentation of \npicamera. If you set this to other values please be sure what you are doing, not all resolutions are supported\nby the picam. Some might lead to slower image capturing. \n\n\nThe position values are used to define where the camera is located in the case. All values are in cm. \nThre is an image later in this documentation which explains all the dimension related meassures. \n\n\nFrame dimension is what your camera sees in the case. An easy way to validate this value is to put a \nruler to the backwall of the fabscan ( i used a paper one from IKEA ). Then activate the settings mode\nand read the last value you can read in the image. The default is 23.5 cm. The default value fits most\nof the FabScan setups. This value is used for tansforming image coordinates to world coordinates. \n\n\n\n\n   \ncamera\n : {\n     \ntype\n : \nPICAM\n,\n     \ndevice\n : 1,\n     \npreview_resolution\n:{\n        \nwidth\n: 320,\n        \nheight\n: 240\n     },\n     \nresolution\n:{\n          \nwidth\n: 1296,\n          \nheight\n:972\n      },\n      \nposition\n:{\n          \nx\n: 0.0,\n          \ny\n: 5.5,\n          \nz\n: 27.6\n      },\n      \nframe\n:{\n          \ndimension\n: 23.5\n      }\n   }\n\n\n\n\nLaser\n\n\nThis section describes the laser position and laser stepper motor values. I mentioned position values in the section \nbefore (Camera), have a look at the image. \n\n\nThe angle is set to the angle which was used in the last scan. The rotation_steps value should be used for a laser \nangle change (not implemented yet).Steps defines how many steps the motor can do. In the default case the motor is \nset to 1/16 step mode. A motor with 200 steps per turn can then perform 3200 steps. \n\n\n   \nlaser\n: {\n      \nposition\n:{\n        \nx\n: 10.0,\n        \ny\n: 7.3,\n        \nz\n: 24.5\n      },\n      \nangle\n: 33.0,\n      \nrotation_steps\n: 5,\n      \nsteps\n: 3200\n   }\n\n\n\n\nTurntable\n\n\nIn this section some turntable related values are set. For positioning have a look to the image. \nSteps defines how many steps can be perfomed for a full rotation. This value depends on your motor and driver.\nIn the default case the motor is set to 1/16 step mode. A motor with 200 steps per turn can then perform 3200 steps.\n\n\n   \nturntable\n:{\n     \nposition\n: {\n       \nx\n: 0.0,\n       \ny\n: 0.0,\n       \nz\n: 7.5\n     },\n     \nsteps\n:3200\n   },\n\n\n\n\nScanner\n\n\nThis section defines global scanner related values. Origin is defined as the green horizontal line in the settings\npreview window. It is a also here a good idea to keep that value untouched. Process number defines how many processes\nshould be used for calculating the scan data. Due the Raspberry Pi2 serves 4 cores it is a good idea to keep this\nvalue. Increasing the proccess number does not mean inrceasing speed in all cases. \nMeshlab is not supported in the curren verision of fabscan pi. So you can leave this value. \n\n\n   \nscanner\n: {\n      \norigin\n:{\n        \ny\n : 0.75\n      }\n   },\n   \nprocess_number\n: 4,\n   \nmeshlab\n:{\n     \npath\n: \n/usr/bin/\n\n   }\n}\n\n\n\n\nFor a first try the default values should be fine. But the values in your setup may be different. To be sure measure your\nsetup and modify the values in your default.conf.json file if needed. \n\n\nY values\n\n\n\nX and Z values\n\n\n\nTroubleshooting\n\n\nCan not connect to Arduino.\nIs the Arduino connected to the USB port. Check the port in your fabscanpi-server configuration\nfile. Try another port e.g. /dev/ttyUSB0. \nMore information about changing the configuration can be found in \"FabScan Pi Configuration\"\nsection.\n\n\nCamera is not connected. \nCheck the cable from the Raspberry Pi to the camera module. Be careful the cable can be very\nfragil. Try another camera application for checking camera functionality e.g. \nraspistill\n.\n\n\nSetting up a WIFI connection\n\n\nThis description explains howto setup a wifi stick for raspbian. I prefer to use an EDIMAX dongle, it worked best for me. \nFirst plug in your wifi dongle and log in via ssh with password \"raspberry\" (without quotes):\n\n\nssh pi@\nyour-fabscanpi-ip\n\n\n\n\n\nFirst you have to activate the wifi option in your networking setup. \n\n\nsudo nano /etc/network/interfaces\n\n\n\n\nUncomment the folling lines and save the changes. \n\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp\n\n\n\n\nNow restart your network adapters. \n\n\nsudo nano /etc/init.d/networking\n\n\n\n\nIf you type \nsudo ifconfig\n there should be a wlan0 connection in the list. \n\n\nYour fasbcanpi image is ready to go. The only things you have to do is open wpa_supplicant.conf and \ninsert your wifi ssid and your wifi secret.\n\n\nsudo nano /etc/wpa_supplicant/wpa_supplicant.conf\n\n\n\n\nSave the file and try to connect to your wifi by typing the following command.\n\n\nsudo ifup wlan0\n\n\n\n\nIn some cases you have to reboot the Raspberry Pi. Check if the wifi dongle's led is bliking.\nIf you want to change your Raspberry Pi to a fix wifi IP address you have to change the interfaces file\nto get a static wifi connection.\n\n\nsudo nano /etc/network/interfaces\n\n\n\n\nChange the files content from \n\n\nauto lo\niface lo inet loopback\n\nallow-hotplug eth0\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp\n\n\n\n\nto \n\n\nauto lo\niface lo inet loopback\n\nallow-hotplug eth0\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet static\naddress \nip in your network\n\nnetmask \nyour netmask\n\ngateway \nyour gateway\n\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp\n\n\n\n\nAfter you changed the file you can restart your network daemon.\n\n\nsudo /etc/init.d/networking restart", 
            "title": "Software"
        }, 
        {
            "location": "/software/#installation", 
            "text": "There ist no need to flash the Arduino firmware. It will be flashed automatically with the current\nfirmware version after the server is started.  Installation with FabScanPi Image (recommended)  The fastest way to start working with FabScan PI is to use the FabScan PI Raspbian Image. \nDowload the image and install it to a SD-Card. After the image is flashed and the Raspberry\nPi is up and runnig follow the instructions in the  Usage section  Latest image release:   https://github.com/mariolukas/FabScanPi-Build-Raspbian/releases/latest  The image can be build with the FabScanPi Image build script. You will find more \ninformation  here  Installing with fresh Raspbian and packages  This description assumes that you have a SD card with a fresh Raspbian image on it.   First add the fabscan repository to your source list.   echo  deb http://archive.fabscan.org/ jessie main    /etc/apt/sources.list  Then add the FabScan PI repository key to your key chain.  wget http://archive.fabscan.org/fabscan.public.key -O - | sudo apt-key add -  Update the package list.  apt-get update  Finish the installation with the needed packages.  apt-get install fabscanpi-server python-opencv-tbb libtbb2  python-pil python-serial python-pykka python-picamera avrdude  The FabScan PI server can be started with   sudo /etc/init.d/fabscanpi-server start  Read  Usage  section for the next steps.  Installation: With Source Code  Dependencies  FabScan PI software depends on some python libraries. You need to install pyserial, pykka, opencv with tbb support \nand picamera. The easiest way to install all dependencies is to use debians package manager apt. Some of the packages, \nlike opencv with tbb support and libtbb are not provided by the official raspbian mirrors. You need to add the\nfabscan repository to your apt source list.   Build Debian package\nInstall dependencies  sudo apt-get install build-essential dpkg-dev debhelper devscripts fakeroot cdbs python-setuptools python-support  The package is build by calling  make deb  Afterwards the package can be installed by   dpkg -i fabscabpi-server package-version .deb", 
            "title": "Installation"
        }, 
        {
            "location": "/software/#updates", 
            "text": "Updates can be installed with debian's apt-get package manager. Log in via ssh and check/install \nupdates with the following command.  sudo apt-get update   apt-get upgrade", 
            "title": "Updates"
        }, 
        {
            "location": "/software/#configuration", 
            "text": "A configuration file can be found in /etc/fabscanpi/default.config.json. The content of this file \nis in JSON format and can be edited with an editor of your choice (e.g. nano). Be careful and don't\nmiss brackets. JSON is really sensitive in it's format.  Folders  In this section you can change the scan output folder and the folder where the ui is located. If \nyou don't know what you are doing, it is a good decision to keep this section untouched.      folders  : {\n     www :  /home/pi/fabscan/src/www/ ,\n     scans :  /usr/local/fabscanpi/scans/ \n   }  Serial  In this section you can set your port. By default this value is not set, because the\nFabScanPi Server software autodetcts the correct port. Some Arduino and compatible boards differ \nin the port name. The port can be set if you are not using an Arduino UNO or compatible Board. \nIn case that your Arduino is not detected and you can see an error in the /var/log/fabscanpi/fabscan.log\nyou should add the \"port\" attribute to your config.  The autoflash option is True by default, that means that the firmware is flashed automatically to \nthe Arduino or FabScanPi HAT. If you want to use a custom board e.g. sanguinololu, you can set this\nto False and flash the Firmware manually to your board.       serial  : {\n      baudrate  : 115200,\n      port :  /dev/ttyACM0 ,\n      autoflash :  True \n   }  Camera  In this section some camera values are set. The type can be set to PICAM which is default value. There is \nalso an experimental mode for a C270 webcam. But this mode is not further developed. I used it in early \nversions of fabscanpi.   The device is not used for the PICAM. Only if a webcam is used, you have to set the device to the count number\nof your webcam if you have one or more cameras connected to your pi.  Preview Resolution is the resolution value for the settings window. \nResolution is the resolution for the picamera python module. You can have a look to the documentation of \npicamera. If you set this to other values please be sure what you are doing, not all resolutions are supported\nby the picam. Some might lead to slower image capturing.   The position values are used to define where the camera is located in the case. All values are in cm. \nThre is an image later in this documentation which explains all the dimension related meassures.   Frame dimension is what your camera sees in the case. An easy way to validate this value is to put a \nruler to the backwall of the fabscan ( i used a paper one from IKEA ). Then activate the settings mode\nand read the last value you can read in the image. The default is 23.5 cm. The default value fits most\nof the FabScan setups. This value is used for tansforming image coordinates to world coordinates.        camera  : {\n      type  :  PICAM ,\n      device  : 1,\n      preview_resolution :{\n         width : 320,\n         height : 240\n     },\n      resolution :{\n           width : 1296,\n           height :972\n      },\n       position :{\n           x : 0.0,\n           y : 5.5,\n           z : 27.6\n      },\n       frame :{\n           dimension : 23.5\n      }\n   }  Laser  This section describes the laser position and laser stepper motor values. I mentioned position values in the section \nbefore (Camera), have a look at the image.   The angle is set to the angle which was used in the last scan. The rotation_steps value should be used for a laser \nangle change (not implemented yet).Steps defines how many steps the motor can do. In the default case the motor is \nset to 1/16 step mode. A motor with 200 steps per turn can then perform 3200 steps.       laser : {\n       position :{\n         x : 10.0,\n         y : 7.3,\n         z : 24.5\n      },\n       angle : 33.0,\n       rotation_steps : 5,\n       steps : 3200\n   }  Turntable  In this section some turntable related values are set. For positioning have a look to the image. \nSteps defines how many steps can be perfomed for a full rotation. This value depends on your motor and driver.\nIn the default case the motor is set to 1/16 step mode. A motor with 200 steps per turn can then perform 3200 steps.      turntable :{\n      position : {\n        x : 0.0,\n        y : 0.0,\n        z : 7.5\n     },\n      steps :3200\n   },  Scanner  This section defines global scanner related values. Origin is defined as the green horizontal line in the settings\npreview window. It is a also here a good idea to keep that value untouched. Process number defines how many processes\nshould be used for calculating the scan data. Due the Raspberry Pi2 serves 4 cores it is a good idea to keep this\nvalue. Increasing the proccess number does not mean inrceasing speed in all cases. \nMeshlab is not supported in the curren verision of fabscan pi. So you can leave this value.       scanner : {\n       origin :{\n         y  : 0.75\n      }\n   },\n    process_number : 4,\n    meshlab :{\n      path :  /usr/bin/ \n   }\n}  For a first try the default values should be fine. But the values in your setup may be different. To be sure measure your\nsetup and modify the values in your default.conf.json file if needed.   Y values  X and Z values", 
            "title": "Configuration"
        }, 
        {
            "location": "/software/#troubleshooting", 
            "text": "Can not connect to Arduino.\nIs the Arduino connected to the USB port. Check the port in your fabscanpi-server configuration\nfile. Try another port e.g. /dev/ttyUSB0. \nMore information about changing the configuration can be found in \"FabScan Pi Configuration\"\nsection.  Camera is not connected. \nCheck the cable from the Raspberry Pi to the camera module. Be careful the cable can be very\nfragil. Try another camera application for checking camera functionality e.g.  raspistill .", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/software/#setting-up-a-wifi-connection", 
            "text": "This description explains howto setup a wifi stick for raspbian. I prefer to use an EDIMAX dongle, it worked best for me. \nFirst plug in your wifi dongle and log in via ssh with password \"raspberry\" (without quotes):  ssh pi@ your-fabscanpi-ip   First you have to activate the wifi option in your networking setup.   sudo nano /etc/network/interfaces  Uncomment the folling lines and save the changes.   auto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp  Now restart your network adapters.   sudo nano /etc/init.d/networking  If you type  sudo ifconfig  there should be a wlan0 connection in the list.   Your fasbcanpi image is ready to go. The only things you have to do is open wpa_supplicant.conf and \ninsert your wifi ssid and your wifi secret.  sudo nano /etc/wpa_supplicant/wpa_supplicant.conf  Save the file and try to connect to your wifi by typing the following command.  sudo ifup wlan0  In some cases you have to reboot the Raspberry Pi. Check if the wifi dongle's led is bliking.\nIf you want to change your Raspberry Pi to a fix wifi IP address you have to change the interfaces file\nto get a static wifi connection.  sudo nano /etc/network/interfaces  Change the files content from   auto lo\niface lo inet loopback\n\nallow-hotplug eth0\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet dhcp\nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp  to   auto lo\niface lo inet loopback\n\nallow-hotplug eth0\niface eth0 inet dhcp\n\nauto wlan0\nallow-hotplug wlan0\niface wlan0 inet static\naddress  ip in your network \nnetmask  your netmask \ngateway  your gateway \nwpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\niface default inet dhcp  After you changed the file you can restart your network daemon.  sudo /etc/init.d/networking restart", 
            "title": "Setting up a WIFI connection"
        }, 
        {
            "location": "/developing/", 
            "text": "FabScan PI Server\n\n\nThe FabScan PI server code is located in this repository. The folder src/www contains the latest version of the \nFabScan PI web interface. \n\n\nInstall build dependencies with \napt-get install build-essential python-setuptools debhelper cdbs\n\n\nAfterwards the deb files can be build by calling \nmake deb\n\n\nFabScan PI Web Interface\n\n\nThe FabScan PI Web Interface is included in the server package. Developers can find the current code at \n\n\nhttp://github.com/mariolukas/\n\n\nThe web interface is located at /usr/local/fabscanpi-server/www/ \n\n\nFor further information have a look at the repository. \n\n\nBuilding FabScanPi Images", 
            "title": "Developing"
        }, 
        {
            "location": "/developing/#fabscan-pi-server", 
            "text": "The FabScan PI server code is located in this repository. The folder src/www contains the latest version of the \nFabScan PI web interface.   Install build dependencies with  apt-get install build-essential python-setuptools debhelper cdbs  Afterwards the deb files can be build by calling  make deb", 
            "title": "FabScan PI Server"
        }, 
        {
            "location": "/developing/#fabscan-pi-web-interface", 
            "text": "The FabScan PI Web Interface is included in the server package. Developers can find the current code at   http://github.com/mariolukas/  The web interface is located at /usr/local/fabscanpi-server/www/   For further information have a look at the repository.", 
            "title": "FabScan PI Web Interface"
        }, 
        {
            "location": "/developing/#building-fabscanpi-images", 
            "text": "", 
            "title": "Building FabScanPi Images"
        }, 
        {
            "location": "/contributing/", 
            "text": "", 
            "title": "Contributing"
        }, 
        {
            "location": "/community/", 
            "text": "", 
            "title": "Community"
        }, 
        {
            "location": "/faq/", 
            "text": "", 
            "title": "F.A.Q"
        }
    ]
}